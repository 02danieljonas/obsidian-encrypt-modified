/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var oe=Object.defineProperty;var Te=Object.getOwnPropertyDescriptor;var Ce=Object.getOwnPropertyNames;var Se=Object.prototype.hasOwnProperty;var Fe=(f,t)=>{for(var e in t)oe(f,e,{get:t[e],enumerable:!0})},xe=(f,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of Ce(t))!Se.call(f,i)&&i!==e&&oe(f,i,{get:()=>t[i],enumerable:!(n=Te(t,i))||n.enumerable});return f};var De=f=>xe(oe({},"__esModule",{value:!0}),f);var Le={};Fe(Le,{default:()=>re});module.exports=De(Le);var ve=require("obsidian");var N=require("obsidian");var J=class{constructor(){this.values=new Map}put(t,e){this.values.set(t,e)}get(t,e){var n;return(n=this.values.get(t))!=null?n:e}getFirst(t,e){for(let n=0;n<t.length;n++){let i=t[n];if(this.containsKey(i))return this.get(i,e)}return e}containsKey(t){return this.values.has(t)}getKeys(){return Array.from(this.values.keys())}removeKey(t){return this.values.delete(t)}clear(){this.values.clear()}};var ae=require("obsidian"),V=class{static getFilePathWithNewExtension(t,e){return(0,ae.normalizePath)(t.parent.path+"/"+t.basename+"."+e)}static getFilePathExcludingExtension(t){return(0,ae.normalizePath)(t.parent.path+"/"+t.basename)}};var w=class{static setActive(t){w.isActive=t,w.isActive||this.clear()}static setAutoExpire(t){w.baseMinutesToExpire=t!=null?t:0,w.updateExpiryTime()}static setLevel(t){w.level!=t&&(w.allLevels.contains(t)&&(w.level=t),w.level=w.LevelFilename,this.clear())}static updateExpiryTime(){w.baseMinutesToExpire==0||w.baseMinutesToExpire==null?w.expiryTime=null:w.expiryTime=Date.now()+w.baseMinutesToExpire*1e3*60}static putByFile(t,e){if(!w.isActive)return;let n=w.getFileCacheKey(e);this.cache.put(n,t),w.updateExpiryTime()}static getByFile(t){if(!w.isActive)return w.blankPasswordAndHint;this.clearIfExpired(),w.updateExpiryTime();let e=w.getFileCacheKey(t);return this.cache.get(e,w.blankPasswordAndHint)}static putByPath(t,e){if(!w.isActive)return;let n=w.getPathCacheKey(e);this.cache.put(n,t),w.updateExpiryTime()}static getByPath(t){if(!w.isActive)return w.blankPasswordAndHint;this.clearIfExpired(),w.updateExpiryTime();let e=w.getPathCacheKey(t);return this.cache.get(e,w.blankPasswordAndHint)}static getPathCacheKey(t){let e=t.split("/").slice(0,-1).join("/");switch(w.level){case w.LevelParentPath:return e;default:return t}}static getFileCacheKey(t){switch(w.level){case w.LevelParentPath:return t.parent.path;default:return V.getFilePathExcludingExtension(t)}}static clearIfExpired(){w.expiryTime!=null&&(Date.now()<w.expiryTime||this.clear())}static clearForFile(t){let e=w.getFileCacheKey(t);this.cache.removeKey(e)}static clearForPath(t){let e=w.getPathCacheKey(t);this.cache.removeKey(e)}static clear(){this.cache.clear()}},y=w;y.isActive=!0,y.blankPasswordAndHint={password:"",hint:""},y.cache=new J,y.baseMinutesToExpire=0,y.expiryTime=null,y.LevelFilename="filename",y.LevelParentPath="parentPath",y.allLevels=[w.LevelFilename,w.LevelParentPath],y.level=w.LevelFilename;var _=require("obsidian"),b=class{static isSettingsModalOpen(){return document.querySelector(".mod-settings")!==null}static buildPasswordSetting({container:t,name:e,desc:n="",autoFocus:i=!1,placeholder:s="",initialValue:r="",onChangeCallback:o,onEnterCallback:a}){let l=new _.Setting(t).setName(e).setDesc(n).addButton(c=>{c.setIcon("reading-glasses").onClick(h=>{let p=l.components.find((g,d,u)=>g instanceof _.TextComponent);p instanceof _.TextComponent&&(p.inputEl.type=p.inputEl.type=="password"?"text":"password")})}).addText(c=>{c.setPlaceholder(s),c.setValue(r),c.inputEl.type="password",o!=null&&c.onChange(o),a!=null&&(c.inputEl.onkeydown=h=>{h.key==="Enter"&&(h.preventDefault(),a(c.getValue()))}),i&&setTimeout(()=>c.inputEl.focus(),0)});return l}};var le=new TextEncoder,Ie=new TextDecoder,Ne=1e3,Ae=le.encode("XHWnDAT6ehMVY2zD"),K=class{async useSinglePassword(t){}async deriveKey(t){let e=le.encode(t),n=await crypto.subtle.importKey("raw",e,{name:"PBKDF2"},!1,["deriveKey"]);return crypto.subtle.deriveKey({name:"PBKDF2",hash:{name:"SHA-256"},iterations:Ne,salt:Ae},n,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}async encryptToBytes(t,e){let n=await this.deriveKey(e),i=le.encode(t),s=crypto.getRandomValues(new Uint8Array(16)),r=new Uint8Array(await crypto.subtle.encrypt({name:"AES-GCM",iv:s},n,i)),o=new Uint8Array(s.byteLength+r.byteLength);return o.set(s,0),o.set(r,s.byteLength),o}convertToString(t){let e="";for(let n=0;n<t.length;n++)e+=String.fromCharCode(t[n]);return e}async encryptToBase64(t,e){let n=await this.encryptToBytes(t,e);return btoa(this.convertToString(n))}stringToArray(t){let e=[];for(let n=0;n<t.length;n++)e.push(t.charCodeAt(n));return new Uint8Array(e)}async decryptFromBytes(t,e){try{let n=t.slice(0,16),i=t.slice(16),s=await this.deriveKey(e),r=await crypto.subtle.decrypt({name:"AES-GCM",iv:n},s,i);return Ie.decode(r)}catch(n){return null}}async decryptFromBase64(t,e){try{let n=this.stringToArray(atob(t));return await this.decryptFromBytes(n,e)}catch(n){return null}}};var B=class{constructor(t,e,n){this.vectorSize=t,this.saltSize=e,this.iterations=n}async deriveKey(t,e){let i=new TextEncoder().encode(t),s=await crypto.subtle.importKey("raw",i,"PBKDF2",!1,["deriveKey"]);return await crypto.subtle.deriveKey({name:"PBKDF2",hash:"SHA-512",salt:e,iterations:this.iterations},s,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}async encryptToBytes(t,e){let n=crypto.getRandomValues(new Uint8Array(this.saltSize)),i=await this.deriveKey(e,n),r=new TextEncoder().encode(t),o=crypto.getRandomValues(new Uint8Array(this.vectorSize)),a=new Uint8Array(await crypto.subtle.encrypt({name:"AES-GCM",iv:o},i,r)),l=new Uint8Array(o.byteLength+n.byteLength+a.byteLength);return l.set(o,0),l.set(n,o.byteLength),l.set(a,o.byteLength+n.byteLength),l}convertToString(t){let e="";for(let n=0;n<t.length;n++)e+=String.fromCharCode(t[n]);return e}async encryptToBase64(t,e){let n=await this.encryptToBytes(t,e);return btoa(this.convertToString(n))}stringToArray(t){let e=[];for(let n=0;n<t.length;n++)e.push(t.charCodeAt(n));return new Uint8Array(e)}async decryptFromBytes(t,e){try{let n,i;n=0,i=n+this.vectorSize;let s=t.slice(n,i);n=i,i=n+this.saltSize;let r=t.slice(n,i);n=i,i=void 0;let o=t.slice(n),a=await this.deriveKey(e,r),l=await crypto.subtle.decrypt({name:"AES-GCM",iv:s},a,o);return new TextDecoder().decode(l)}catch(n){return null}}async decryptFromBase64(t,e){try{let n=this.stringToArray(atob(t));return await this.decryptFromBytes(n,e)}catch(n){return null}}async useSinglePassword(){}};var ce={name:"AES-GCM",iv:new Uint8Array([196,190,240,190,188,78,41,132,15,220,84,211]),tagLength:128},Q=class{async useSinglePassword(t){}async buildKey(t){let n=new TextEncoder().encode(t),i=await crypto.subtle.digest({name:"SHA-256"},n);return await crypto.subtle.importKey("raw",i,ce,!1,["encrypt","decrypt"])}async encryptToBase64(t,e){let n=await this.buildKey(e),s=new TextEncoder().encode(t),r=new Uint8Array(await crypto.subtle.encrypt(ce,n,s));return btoa(String.fromCharCode(...r))}stringToArray(t){let e=[];for(let n=0;n<t.length;n++)e.push(t.charCodeAt(n));return new Uint8Array(e)}async decryptFromBase64(t,e){try{let n=this.stringToArray(atob(t)),i=await this.buildKey(e),s=await crypto.subtle.decrypt(ce,i,n);return new TextDecoder().decode(s)}catch(n){return null}}};var E=class{static BuildDefault(){return console.log("BuildDefault CryptoHelper2304( 16, 16, 210000 )"),new B(16,16,21e4)}static BuildFromFileDataOrThrow(t){let e=E.BuildFromFileDataOrNull(t);if(e!=null)return e;throw new Error(`Unable to determine ICryptoHelper for File ver ${t.version}`)}static BuildFromFileDataOrNull(t){return t.version=="1.0"?(console.log("BuildFromFileDataOrNull v1 new CryptoHelper()"),new K):t.version=="2.0"?(console.log("BuildFromFileDataOrNull v2 new CryptoHelper2304( 16, 16, 210000  )"),new B(16,16,21e4)):null}static BuildFromDecryptableOrThrow(t){let e=E.BuildFromDecryptableOrNull(t);if(e!=null)return e;throw new Error(`Unable to determine ICryptoHelper for Decryptable ver ${t.version}`)}static BuildFromDecryptableOrNull(t){return t.version==0?(console.log("BuildFromDecryptableOrNull new CryptoHelperObsolete()"),new Q):t.version==1?(console.log("BuildFromDecryptableOrNull new CryptoHelper()"),new K):t.version==2?(console.log("BuildFromDecryptableOrNull new CryptoHelper2304( 16, 16, 210000 )"),new B(16,16,21e4)):null}};var W=class extends N.PluginSettingTab{constructor(e,n,i,s){super(e,n);this.plugin=n,this.settings=i,this.features=s}display(){let{containerEl:e}=this,n=E.BuildDefault();e.empty();let i=()=>{if(!this.settings.singlePassword){s.settingEl.hide();return}s.settingEl.show()};new N.Setting(e).setName("Use Single Password for encryption").setDesc("Only allow the use of one password for future password encryptions").addToggle(l=>{l.setValue(this.settings.singlePassword).onChange(async c=>{this.settings.singlePassword=c,console.log(this.settings.encryptedString),await this.plugin.saveSettings(),i()})});let s=b.buildPasswordSetting({container:e,name:"Password for encryption:",desc:"This is the only valid password for future encryption, any other password will not work",onChangeCallback:async l=>{let c=new Uint32Array(1);crypto.getRandomValues(c),this.settings.encryptedString=await n.encryptToBase64(c[0].toString(),l)}});new N.Setting(e).setName("Default Hint").setDesc("Default hint to use on every new password").addText(l=>{l.inputEl.placeholder="Default Hint",l.setValue(this.settings.defaultHint),l.onChange(async c=>(this.settings.defaultHint=c,await this.plugin.saveSettings(),c)),l.inputEl.on("keypress","*",(c,h)=>{c.key=="Enter"&&h instanceof HTMLInputElement&&h.value.length>0&&c.preventDefault()})}),new N.Setting(e).setName("Confirm password?").setDesc("Confirm password when encrypting. (Recommended)").addToggle(l=>{l.setValue(this.settings.confirmPassword).onChange(async c=>{this.settings.confirmPassword=c,await this.plugin.saveSettings()})}),i();let r=()=>{if(!this.settings.rememberPassword){o.settingEl.hide(),a.settingEl.hide();return}o.settingEl.show(),a.settingEl.show();let l=this.settings.rememberPasswordTimeout,c=`For ${l} minutes`;l==0&&(c="Until Obsidian is closed"),o.setName(`Remember Password (${c})`)};new N.Setting(e).setName("Remember password?").setDesc("Remember the last used passwords when encrypting or decrypting.  Passwords are remembered until they timeout or Obsidian is closed").addToggle(l=>{l.setValue(this.settings.rememberPassword).onChange(async c=>{this.settings.rememberPassword=c,await this.plugin.saveSettings(),y.setActive(this.settings.rememberPassword),r()})});let o=new N.Setting(e).setDesc("The number of minutes to remember passwords.").addSlider(l=>{l.setLimits(0,120,5).setValue(this.settings.rememberPasswordTimeout).onChange(async c=>{this.settings.rememberPasswordTimeout=c,await this.plugin.saveSettings(),y.setAutoExpire(this.settings.rememberPasswordTimeout),r()})}),a=new N.Setting(e).setDesc("Remember passwords by using a notes file name or parent folder").addDropdown(l=>{l.addOption(y.LevelFilename,"File Name").addOption(y.LevelParentPath,"Parent Folder").setValue(this.settings.rememberPasswordLevel).onChange(async c=>{this.settings.rememberPasswordLevel=c,await this.plugin.saveSettings(),y.setLevel(this.settings.rememberPasswordLevel),r()})});r(),this.features.forEach(l=>{l.buildSettingsUi(e,async()=>await this.plugin.saveSettings())})}};var x=require("obsidian");var M=require("obsidian"),R=class extends M.Modal{constructor(e,n,i=""){super(e);this.decryptInPlace=!1;this.canDecryptInPlace=!0;this.titleEl.setText(n),this.text=i}onOpen(){var r;let{contentEl:e}=this;e.empty(),e.classList.add("meld-encrypt-decrypt-modal");let n;(r=new M.Setting(e).addTextArea(o=>{n=o,o.setValue(this.text),o.inputEl.setSelectionRange(0,0),o.inputEl.readOnly=!0,o.inputEl.rows=10}).settingEl.querySelector(".setting-item-info"))==null||r.remove();let s=new M.Setting(e);s.addButton(o=>{o.setButtonText("Copy").onClick(a=>{navigator.clipboard.writeText(n.getValue()),new M.Notice("Copied!")})}),this.canDecryptInPlace&&s.addButton(o=>{o.setWarning().setButtonText("Decrypt in-place").onClick(a=>{this.decryptInPlace=!0,this.close()})})}};var v=require("obsidian");var L=class extends v.Modal{constructor(e,n,i,s,r,o,a=null,l=null,c=!1){super(e);this.defaultPassword=null;this.resultConfirmed=!1;this.resultPassword=null;this.resultShowInReadingView=null;this.resultTextToEncrypt=null;this.defaultPassword=a,this.confirmPassword=i,this.showInReadingView=s,this.isEncrypting=n,this.defaultHint=l!=null?l:"",this.showTextToEncrypt=c,this.singlePassword=r,this.encryptedString=o}onOpen(){var g;let{contentEl:e}=this;e.empty(),e.classList.add("meld-encrypt-password-modal"),this.invalidate();let n=(g=this.defaultPassword)!=null?g:"",i="",s=this.defaultHint,r=this.showInReadingView,o="";new v.Setting(e).setHeading().setName(this.isEncrypting?"Encrypting":"Decrypting"),b.buildPasswordSetting({container:e,name:"Password:",placeholder:this.isEncrypting||s.length==0?"":`Hint: ${s}`,initialValue:n,autoFocus:!0,onChangeCallback:d=>{n=d,this.invalidate()},onEnterCallback:async d=>{if(n=d,this.invalidate(),n.length>0)if(a.settingEl.isShown()){let u=a.components.find(P=>P instanceof v.TextComponent);u instanceof v.TextComponent&&u.inputEl.focus()}else if(l.settingEl.isShown()){let u=l.components.find(P=>P instanceof v.TextComponent);u instanceof v.TextComponent&&u.inputEl.focus()}else await p()&&this.close()}});let a=b.buildPasswordSetting({container:e,name:"Confirm Password:",onChangeCallback:d=>{i=d,this.invalidate()},onEnterCallback:async d=>{if(i=d,this.invalidate(),i.length>0&&await p()&&l.settingEl.isShown()){let u=l.components.find(P=>P instanceof v.TextComponent);u instanceof v.TextComponent&&u.inputEl.focus()}}});this.confirmPassword||a.settingEl.hide();let l=new v.Setting(e).setName("Optional Password Hint").addText(d=>{d.inputEl.placeholder="Password Hint",d.setValue(s),d.onChange(u=>s=u),d.inputEl.on("keypress","*",async(u,P)=>{u.key=="Enter"&&P instanceof HTMLInputElement&&P.value.length>0&&(u.preventDefault(),await p()&&this.close())})});this.isEncrypting||l.settingEl.hide();let c=new v.Setting(e).setName("Show encrypted marker in Reading view").addToggle(d=>{d.setValue(r).onChange(u=>{r=u})});this.isEncrypting||c.settingEl.hide();let h=new v.Setting(e).setName("Text to encrypt").addTextArea(d=>{d.setValue("").onChange(u=>o=u),d.inputEl.rows=5,d.inputEl.style.width="100%"});this.showTextToEncrypt||h.settingEl.hide(),new v.Setting(e).addButton(d=>{d.setButtonText("Confirm").onClick(async u=>{await p()&&this.close()})});let p=async()=>{if(this.invalidate(),a.setDesc(""),this.confirmPassword&&n!=i)return a.setDesc("Passwords don't match"),!1;let u=await E.BuildDefault().decryptFromBase64(this.encryptedString,n);return this.isEncrypting&&this.singlePassword&&u==null?(console.debug("2. This password does not match the default password."),new v.Notice("This password does not match the default password."),!1):(this.resultConfirmed=!0,this.resultPassword=n,this.resultHint=s,this.resultShowInReadingView=r,this.resultTextToEncrypt=o,!0)}}invalidate(){this.resultConfirmed=!1,this.resultPassword=null,this.resultHint="",this.resultTextToEncrypt=""}};var Z=class{};var ee="%%\u{1F510}\u03B2 ",te="\u{1F510}\u03B2 ",de="%%\u{1F510}\u03B1 ",pe="\u{1F510}\u03B1 ",ue="%%\u{1F510} ",Ee=ee,Pe=te,A=[ee,te,de,pe,ue],he=" \u{1F510}%%",ge=" \u{1F510}",H=[he,ge],F="\u{1F4A1}";var X=class{constructor(t){this.process(t)}process(t){var e,n;if(this.processedText=t,this.isEmpty=t.length===0,this.prefix=(e=A.find(i=>t.startsWith(i)))!=null?e:"",this.suffix=(n=H.find(i=>t.endsWith(i)))!=null?n:"",this.hasEncryptedPrefix=this.prefix.length>0,this.hasEncryptedSuffix=this.suffix.length>0,this.hasObsoleteEncryptedPrefix=this.prefix===ue,this.containsEncryptedMarkers=[...A,...H].some(i=>t.includes(i)),this.canDecrypt=this.hasEncryptedPrefix&&this.hasEncryptedSuffix,this.canEncrypt=!this.hasEncryptedPrefix&&!this.containsEncryptedMarkers,this.canDecrypt){let i=this.parseDecryptableContent(t);i!=null?this.decryptable=i:this.canDecrypt=!1}}parseDecryptableContent(t){let e=new Z;if(!this.hasEncryptedPrefix||!this.hasEncryptedSuffix)return null;this.hasObsoleteEncryptedPrefix?e.version=0:this.prefix==ee||this.prefix==te?e.version=2:(this.prefix==de||this.prefix==pe)&&(e.version=1);let n=t.substring(this.prefix.length,t.length-this.suffix.length);if([...A,...H].some(i=>n.includes(i)))return null;if(n.substring(0,F.length)==F){let i=n.indexOf(F,F.length);if(i<0)return null;e.hint=n.substring(F.length,i),e.base64CipherText=n.substring(i+F.length)}else e.base64CipherText=n;return e}};var Y=class{async onload(t,e){this.plugin=t,this.pluginSettings=e,this.featureSettings=e.featureInplaceEncrypt,this.plugin.registerMarkdownPostProcessor((n,i)=>this.processEncryptedCodeBlockProcessor(n,i)),t.addCommand({id:"meld-encrypt",name:"Encrypt/Decrypt",icon:"lock",editorCheckCallback:(n,i,s)=>this.processEncryptDecryptCommand(n,i,!1)}),t.addCommand({id:"meld-encrypt-in-place",name:"Encrypt/Decrypt In-place",icon:"lock",editorCheckCallback:(n,i,s)=>this.processEncryptDecryptCommand(n,i,!0)})}onunload(){}replaceMarkersRecursive(t){if(t instanceof HTMLElement){t.childNodes.forEach(e=>this.replaceMarkersRecursive(e));return}if(t instanceof Text){let e=t.textContent;if(e==null||!e.contains("\u{1F510}"))return;let n=t.parentElement;if(n==null)return;let i=/🔐(.*?)🔐/g;n.removeChild(t);for(let s of e.matchAll(i))n.createSpan({cls:"meld-encrypt-inline-reading-marker",text:"\u{1F510}",attr:{"data-meld-encrypt-encrypted":s[0]}})}}async processEncryptedCodeBlockProcessor(t,e){this.replaceMarkersRecursive(t);let n=t.querySelectorAll(".meld-encrypt-inline-reading-marker");this.bindReadingIndicatorEventHandlers(e.sourcePath,n)}bindReadingIndicatorEventHandlers(t,e){e.forEach(n=>{let i=n;i!=null&&i.onClickEvent(async s=>{let r=s.target;if(r==null)return;let o=r.dataset.meldEncryptEncrypted;if(o==null)return;let a=new X(o);await this.handleReadingIndicatorClick(t,a.decryptable)})})}async handleReadingIndicatorClick(t,e){if(e==null){new x.Notice("\u274C Decryption failed!");return}if(await this.showDecryptedTextIfPasswordKnown(t,e))return;let n=await this.fetchPasswordFromUser(e.hint);n!=null&&(await this.showDecryptedResultForPassword(e,n)?y.putByPath({password:n,hint:e.hint},t):new x.Notice("\u274C Decryption failed!"))}async showDecryptedResultForPassword(t,e){let i=await E.BuildFromDecryptableOrThrow(t).decryptFromBase64(t.base64CipherText,e);return i===null?!1:new Promise(s=>{let r=new R(this.plugin.app,"\u{1F513}",i);r.canDecryptInPlace=!1,r.onClose=()=>{s(!0)},r.open()})}async fetchPasswordFromUser(t){return new Promise(e=>{let n=new L(this.plugin.app,!1,!1,this.featureSettings.showMarkerWhenReadingDefault,this.pluginSettings.singlePassword,this.pluginSettings.encryptedString,"",t);n.onClose=()=>{e(n.resultPassword)},n.open()})}async showDecryptedTextIfPasswordKnown(t,e){let n=y.getByPath(t);return n.password==null?!1:await this.showDecryptedResultForPassword(e,n.password)}buildSettingsUi(t,e){new x.Setting(t).setHeading().setName("In-place encryption"),new x.Setting(t).setName("Expand selection to whole line?").setDesc("Partial selections will get expanded to the whole line.").addToggle(n=>{n.setValue(this.featureSettings.expandToWholeLines).onChange(async i=>{this.featureSettings.expandToWholeLines=i,await e()})}),new x.Setting(t).setName("By default, show encrypted marker when reading").setDesc("When encrypting inline text, should the default be to have a visible marker in Reading view?").addToggle(n=>{n.setValue(this.featureSettings.showMarkerWhenReadingDefault).onChange(async i=>{this.featureSettings.showMarkerWhenReadingDefault=i,await e()})})}processEncryptDecryptCommand(t,e,n){if(t&&b.isSettingsModalOpen())return!0;let i=e.getCursor("from"),s=e.getCursor("to");if(this.featureSettings.expandToWholeLines){i={line:i.line,ch:0};let a=s.line,l=e.getLine(a);s={line:a,ch:l.length}}else if(!e.somethingSelected()){let o=this.getClosestPrefixCursorPos(e),a=this.getClosestSuffixCursorPos(e);if(o==null||a==null||i.line<o.line||s.line>a.line)return this.promptForTextToEncrypt(t,e,i);i=o,s=a}let r=e.getRange(i,s);return this.processSelection(t,e,r,i,s,n)}promptForTextToEncrypt(t,e,n){let i=this.plugin.app.workspace.getActiveFile();if(i==null)return!1;if(t)return!0;let s="",r="";if(this.pluginSettings.rememberPassword){let l=y.getByPath(i.path);s=l.password,r=l.hint}let o=this.pluginSettings.confirmPassword,a=new L(this.plugin.app,!0,o,this.featureSettings.showMarkerWhenReadingDefault,this.pluginSettings.singlePassword,this.pluginSettings.encryptedString,s,r,!0);return a.onClose=async()=>{var g,d,u,P;if(!a.resultConfirmed)return;let l=(g=a.resultPassword)!=null?g:"",c=(d=a.resultHint)!=null?d:"",h=(u=a.resultTextToEncrypt)!=null?u:"",p=new ne;p.text=h,p.hint=c,this.encryptSelection(e,p,l,n,n,(P=a.resultShowInReadingView)!=null?P:this.featureSettings.showMarkerWhenReadingDefault),y.putByPath({password:l,hint:c},i.path)},a.open(),!1}getClosestPrefixCursorPos(t){let e=A.reduce((i,s,r)=>r==0||s.length>i.length?s:i),n=t.posToOffset(t.getCursor("from"))+e.length;for(let i=n;i>=0;i--){let s=t.offsetToPos(i);for(let r of A){let o=i-r.length,a=t.offsetToPos(o);if(t.getRange(a,s)==r)return t.offsetToPos(o)}}return null}getClosestSuffixCursorPos(t){let e=A.reduce((r,o,a)=>a==0||o.length>r.length?o:r),n=t.posToOffset(t.getCursor("from"))-e.length+1,i=t.lastLine(),s=t.posToOffset({line:i,ch:t.getLine(i).length});for(let r=n;r<=s;r++){let o=t.offsetToPos(r);for(let a of H){let l=r+a.length,c=t.offsetToPos(l);if(t.getRange(o,c)==a)return c}}return null}processSelection(t,e,n,i,s,r,o=!0){var d;let a=new X(n);if(a.isEmpty)return t||new x.Notice("Nothing to Encrypt."),!1;if(!a.canDecrypt&&!a.canEncrypt)return t||new x.Notice("Unable to Encrypt or Decrypt that."),!1;if(a.canEncrypt&&!o)return!1;let l=this.plugin.app.workspace.getActiveFile();if(l==null)return!1;if(t)return!0;let c="",h=(d=a.decryptable)==null?void 0:d.hint;if(this.pluginSettings.rememberPassword){let u=y.getByPath(l.path);c=u.password,h=h!=null?h:u.hint}let p=a.canEncrypt&&this.pluginSettings.confirmPassword,g=new L(this.plugin.app,a.canEncrypt,p,this.featureSettings.showMarkerWhenReadingDefault,this.pluginSettings.singlePassword,this.pluginSettings.encryptedString,c,h);return g.onClose=async()=>{var ye,fe,me;if(!g.resultConfirmed)return;let u=(ye=g.resultPassword)!=null?ye:"",P=(fe=g.resultHint)!=null?fe:"";if(a.canEncrypt){let j=new ne;j.text=n,j.hint=P,this.encryptSelection(e,j,u,i,s,(me=g.resultShowInReadingView)!=null?me:this.featureSettings.showMarkerWhenReadingDefault),y.putByPath({password:u,hint:P},l.path)}else a.decryptable&&await this.decryptSelection(e,a.decryptable,u,i,s,r)&&y.putByPath({password:u,hint:P},l.path)},g.open(),!0}async encryptSelection(t,e,n,i,s,r){let o=E.BuildDefault(),a=this.encodeEncryption(await o.encryptToBase64(e.text,n),e.hint,r);t.setSelection(i,s),t.replaceSelection(a)}async decryptSelection(t,e,n,i,s,r){let a=await E.BuildFromDecryptableOrThrow(e).decryptFromBase64(e.base64CipherText,n);if(a===null)return new x.Notice("\u274C Decryption failed!"),!1;if(r)t.setSelection(i,s),t.replaceSelection(a);else{let l=new R(this.plugin.app,"\u{1F513}",a);l.onClose=()=>{t.focus(),l.decryptInPlace&&(t.setSelection(i,s),t.replaceSelection(a))},l.open()}return!0}encodeEncryption(t,e,n){if(!A.some(i=>t.includes(i))&&!H.some(i=>t.includes(i))){let i=n?Pe:Ee,s=n?ge:he;return e.length>0?i.concat(F,e,F,t,s):i.concat(t,s)}return t}},ne=class{};var S=require("obsidian");var m=require("obsidian");var O=class{static get showInlineTitle(){var t;return(t=app.vault.getConfig("showInlineTitle"))!=null?t:!0}static get readableLineLength(){var t;return(t=app.vault.getConfig("readableLineLength"))!=null?t:!0}};var ie=class{constructor(t,e,n){this.version="1.0";this.version=t,this.hint=e,this.encodedData=n}},we=class{static async encode(t,e,n){let s=await E.BuildDefault().encryptToBase64(n,t);return new ie(we.DEFAULT_VERSION,e,s)}static async decrypt(t,e){return t.encodedData==""?"":await E.BuildFromFileDataOrThrow(t).decryptFromBase64(t.encodedData,e)}},D=we;D.DEFAULT_VERSION="2.0";var I=class{static encode(t){return JSON.stringify(t,null,2)}static decode(t){return t===""?new ie(D.DEFAULT_VERSION,"",""):JSON.parse(t)}};var ke="encrypted",be="mdenc",se=be,k=[be,ke];var G="meld-encrypted-file-content-view",z=class extends m.TextFileView{constructor(e,n,i,s){var r;super(e);this.iconReadingView="book-open";this.iconSourceView="code";this.iconToggleEditView="edit";this.iconLockFile="lock";this.iconChangePassword="key";this.currentView=0;this.encryptionPassword="";this.hint="";this.currentEditorSourceText="";this.settings=n,this.singlePassword=i,this.encryptedString=s,this.defaultEditNoteView=(r=n.defaultView)!=null?r:"Source",this.currentEditNoteMode=this.defaultEditNoteView,this.elActionEditView=this.addAction(this.iconSourceView,"Source",()=>this.toggleReadingView()),this.elActionReadingView=this.addAction(this.iconReadingView,"Reading",()=>this.toggleReadingView()),this.elActionIconLockNote=this.addAction(this.iconLockFile,"Lock",()=>this.actionLockFile()),this.elActionChangePassword=this.addAction(this.iconChangePassword,"Change Password",()=>this.actionChangePassword()),this.elActionEditView.hide(),this.elActionReadingView.hide(),this.elActionIconLockNote.hide(),this.elActionChangePassword.hide(),this.containerEl.classList.add("meld-encrypt-encrypted-note-view"),this.contentEl.classList.add("meld-encrypt-encrypted-note-view-content")}toggleReadingView(){this.currentView==2&&(this.currentEditNoteMode=="Reading"?this.currentEditNoteMode="Source":this.currentEditNoteMode=="Source"&&(this.currentEditNoteMode="Reading"),this.refreshView(2))}actionLockFile(){this.encryptionPassword="",y.clearForFile(this.file),this.refreshView(1)}actionChangePassword(){this.refreshView(3)}onPaneMenu(e,n){n=="tab-header"&&this.currentView==2&&(e.addItem(i=>{i.setSection("action").setIcon(this.iconToggleEditView).setTitle("Toggle Editing/Reading").onClick(()=>this.toggleReadingView())}),e.addItem(i=>{i.setSection("action").setIcon(this.iconLockFile).setTitle("Lock").onClick(()=>this.actionLockFile())}),e.addItem(i=>{i.setSection("action").setIcon(this.iconChangePassword).setTitle("Change Password").onClick(()=>this.actionChangePassword())})),super.onPaneMenu(e,n)}addHeader(e,n){var i;e.createDiv({text:`\u{1F510} ${n} \u{1F510}`,cls:"encrypted-note-message"}),O.showInlineTitle&&e.createDiv({text:(i=this.file)==null?void 0:i.basename,cls:"inline-title"})}async validatePassword(e){let i=await E.BuildDefault().decryptFromBase64(this.encryptedString,e);return this.singlePassword&&i==null?(console.debug("1. This password does not match the default password."),new m.Notice("This password does not match the default password."),"This password does not match the default password."):""}validateConfirm(e,n){return e===n?"":"Password doesn't match"}addNewNoteView(e){this.addHeader(e,"This note will be encrypted");let n=this.addUserInputContainer(e);new m.Setting(n).setDesc("Please provide a password and hint to start editing this note.");let i=async(p,g,d)=>{let u=await this.validatePassword(p),P=this.validateConfirm(p,g);l.setDesc(u),c.setDesc(P),u.length===0&&P.length===0&&(this.encryptionPassword=p,this.hint=d,O.showInlineTitle||(this.currentEditorSourceText=`# ${this.file.basename}


`),await this.encodeAndSave(),y.putByFile({password:p,hint:d},this.file),this.currentEditNoteMode="Source",this.refreshView(2))},s=y.getByFile(this.file),r=s.password,o="",a=s.hint,l=b.buildPasswordSetting({container:n,name:"Password:",autoFocus:!0,initialValue:r,onChangeCallback:async p=>{r=p,l.setDesc(await this.validatePassword(r)),c.setDesc(this.validateConfirm(r,o))},onEnterCallback:p=>{var g;r=p,r.length>0&&((g=c.controlEl.querySelector("input"))==null||g.focus())}}),c=b.buildPasswordSetting({container:n,name:"Confirm:",autoFocus:!1,onChangeCallback:async p=>{o=p,l.setDesc(await this.validatePassword(r)),c.setDesc(this.validateConfirm(r,o))},onEnterCallback:p=>{var d;o=p,r===o&&((d=h.controlEl.querySelector("input"))==null||d.focus())}}),h=new m.Setting(n).setName("Hint:").addText(p=>{p.setValue(a),p.onChange(g=>{a=g})});h.controlEl.on("keydown","*",p=>{p.key==="Enter"&&(p.preventDefault(),i(r,o,a))}),new m.Setting(n).addButton(p=>{p.setCta().setIcon("go-to-file").setTooltip("Edit").onClick(g=>i(r,o,a))})}addDecryptNoteView(e){this.addHeader(e,"This note is encrypted");let n=this.addUserInputContainer(e);new m.Setting(n).setDesc("Please provide a password to unlock this note.");let i=b.buildPasswordSetting({container:n,name:"Password:",autoFocus:!0,placeholder:this.formatHint(this.hint),onChangeCallback:async r=>{this.encryptionPassword=r,i.setDesc(await this.validatePassword(this.encryptionPassword))},onEnterCallback:async()=>await this.handleDecryptButtonClick()});new m.Setting(n).addButton(r=>{r.setCta().setIcon("checkmark").setTooltip("Unlock & Edit").onClick(o=>this.handleDecryptButtonClick())});let s=y.getByFile(this.file);this.encryptionPassword=s.password,s.password.length>0&&this.decryptWithPassword(s.password).then(r=>{r!=null&&(this.currentEditorSourceText=r,this.refreshView(2),new m.Notice("Decrypted using remembered password",2e3))})}async encodeAndSave(){try{let e=await D.encode(this.encryptionPassword,this.hint,this.currentEditorSourceText);this.data=I.encode(e),this.requestSave()}catch(e){console.error(e),new m.Notice(e,1e4)}}addEditorSourceView(e){this.elActionReadingView.show(),this.elActionIconLockNote.show(),this.elActionChangePassword.show(),this.addHeader(e,"Editing an encrypted note");let n=e.createDiv({cls:"editor-source-view"},i=>{i.spellcheck=!0,i.autocapitalize="on",i.translate=!1,i.contentEditable="plaintext-only",i.style.tabSize="4",i.innerText=this.currentEditorSourceText});n.focus(),n.on("keydown","*",(i,s)=>{i.key=="Tab"&&this.handleTabInEditor(i,n)}),n.on("input","*",async(i,s)=>{this.updateAndSaveEditorSourceText(n)})}async updateAndSaveEditorSourceText(e){this.currentEditorSourceText=e.innerText,await this.encodeAndSave()}handleTabInEditor(e,n){let i=window.getSelection();if(i==null||i.rangeCount<1)return;e.preventDefault();let s=!e.shiftKey;for(let r=0;r<i.rangeCount;r++){let o=i.getRangeAt(r),a=this.getRangeNodes(o);for(let l=0;l<a.length;l++){let c=a[l];c instanceof Text&&(s?c.insertData(0,"	"):c.data.startsWith("	")&&c.replaceData(0,1,""))}}this.updateAndSaveEditorSourceText(n)}getRangeNodes(e){let n=Array();if(e.startContainer==e.endContainer)return[e.startContainer];let i=e.startContainer;for(i==e.commonAncestorContainer&&(i=e.commonAncestorContainer.firstChild);i!=null;)e.intersectsNode(i)&&n.push(i),i=i.nextSibling;return n}addEditorReadingView(e){this.elActionEditView.show(),this.elActionIconLockNote.show(),this.elActionChangePassword.show(),this.addHeader(e,"Reading an encrypted note");let n=e.createDiv({cls:"editor-reading-view"});m.MarkdownRenderer.renderMarkdown(this.currentEditorSourceText,n,this.file.path,this).catch(i=>{console.error(i)}),n.on("click","a.internal-link",async(i,s)=>{if(s instanceof HTMLAnchorElement){let r=(0,m.normalizePath)(decodeURI(s.pathname));this.app.workspace.openLinkText(r,this.file.path,i.ctrlKey)}})}addUserInputContainer(e){return e.createDiv({cls:"input-container"})}addChangePasswordView(e){this.addHeader(e,"Change encrypted note password");let n=this.addUserInputContainer(e),i="",s="",r="",o=async(h,p,g)=>{let d=await this.validatePassword(h),u=this.validateConfirm(h,p);a.setDesc(d),l.setDesc(u),d.length===0&&u.length===0&&(this.encryptionPassword=h,this.hint=g,this.encodeAndSave(),this.refreshView(2),y.putByFile({password:h,hint:g},this.file),new m.Notice("Password and Hint were changed"))},a=b.buildPasswordSetting({container:n,name:"New Password:",autoFocus:!0,onChangeCallback:async h=>{i=h,a.setDesc(await this.validatePassword(i)),l.setDesc(this.validateConfirm(i,s))},onEnterCallback:h=>{var p;i=h,i.length>0&&((p=l.controlEl.querySelector("input"))==null||p.focus())}}),l=b.buildPasswordSetting({container:n,name:"Confirm:",onChangeCallback:async h=>{s=h,a.setDesc(await this.validatePassword(i)),l.setDesc(this.validateConfirm(i,s))},onEnterCallback:h=>{var g;s=h,i===s&&((g=c.controlEl.querySelector("input"))==null||g.focus())}}),c=new m.Setting(n).setName("New Hint:").addText(h=>{h.onChange(p=>{r=p})});c.controlEl.on("keydown","*",h=>{h.key==="Enter"&&(h.preventDefault(),o(i,s,r))}),new m.Setting(n).addButton(h=>{h.removeCta().setIcon("cross").setTooltip("Cancel").onClick(()=>{this.refreshView(2)})}).addButton(h=>{h.setCta().setIcon("checkmark").setTooltip("Change Password").setWarning().onClick(p=>{o(i,s,r)})})}formatHint(e){return e.length>0?`Hint: ${e}`:""}refreshView(e){this.currentView=e,this.elActionEditView.hide(),this.elActionReadingView.hide(),this.elActionIconLockNote.hide(),this.elActionChangePassword.hide(),this.contentEl.empty(),O.readableLineLength?this.contentEl.classList.add("is-readable-line-width"):this.contentEl.classList.remove("is-readable-line-width");let n=this.contentEl.createDiv({cls:"content-container"});switch(this.currentView){case 4:this.addNewNoteView(n);break;case 1:this.addDecryptNoteView(n);break;case 2:this.currentEditNoteMode=="Source"?this.addEditorSourceView(n):this.addEditorReadingView(n);break;case 3:this.addChangePasswordView(n);break}}async decryptWithPassword(e){let n=I.decode(this.data);return await D.decrypt(n,e)}async handleDecryptButtonClick(){let e=await this.decryptWithPassword(this.encryptionPassword);e===null?new m.Notice("Decryption failed"):(y.putByFile({password:this.encryptionPassword,hint:this.hint},this.file),this.currentEditorSourceText=e,this.refreshView(2))}canAcceptExtension(e){return k.contains(e)}getViewType(){return G}setViewData(e,n){if(n){let i;e===""?i=4:i=1,this.encryptionPassword="";let s=I.decode(this.data);this.hint=s.hint,this.refreshView(i)}else this.leaf.detach(),new m.Notice("Multiple views of the same encrypted note isn't supported")}getViewData(){return this.data}clear(){}};var $=class{async onload(t,e){this.plugin=t,this.settings=e.featureWholeNoteEncrypt,this.pluginSettings=e,this.plugin.addRibbonIcon("file-lock-2","New encrypted note",n=>{this.processCreateNewEncryptedNoteCommand(this.getDefaultFileFolder())}),this.plugin.registerView(G,n=>new z(n,this.settings,this.pluginSettings.singlePassword,this.pluginSettings.encryptedString)),this.plugin.registerExtensions(k,G),this.plugin.addCommand({id:"meld-encrypt-create-new-note",name:"Create new encrypted note",icon:"file-lock-2",callback:()=>this.processCreateNewEncryptedNoteCommand(this.getDefaultFileFolder())}),this.plugin.addCommand({id:"meld-encrypt-toggle-reading-view",name:"Toggle Reading View",icon:"edit",callback:()=>this.processToggleReadingViewCommand()}),this.plugin.registerEvent(this.plugin.app.workspace.on("file-menu",(n,i)=>{i instanceof S.TFolder&&n.addItem(s=>{s.setTitle("New encrypted note").setIcon("file-lock-2").onClick(()=>this.processCreateNewEncryptedNoteCommand(i))})}))}onunload(){this.plugin.app.workspace.detachLeavesOfType(G)}processToggleReadingViewCommand(){let t=this.plugin.app.workspace.getActiveViewOfType(z);t==null||t.toggleReadingView()}getDefaultFileFolder(){let t=this.plugin.app.workspace.getActiveFile();return t!=null?this.plugin.app.fileManager.getNewFileParent(t.path):this.plugin.app.fileManager.getNewFileParent("")}processCreateNewEncryptedNoteCommand(t){try{let e=(0,S.moment)().format(`[Untitled] YYYYMMDD hhmmss[.${se}]`),n=(0,S.normalizePath)(t.path+"/"+e);this.plugin.app.vault.create(n,"").then(async i=>{await this.plugin.app.workspace.getLeaf(!0).openFile(i)}).catch(i=>{new S.Notice(i,1e4)})}catch(e){console.error(e),new S.Notice(e,1e4)}}buildSettingsUi(t,e){new S.Setting(t).setHeading().setName("Whole note encryption"),new S.Setting(t).setName("Default view for new tabs").setDesc("The default view that a new encrypted note tab gets opened in").addDropdown(n=>{var i;n.addOption(`${"Source"}`,"Source view").addOption(`${"Reading"}`,"Reading view").setValue(`${(i=this.settings.defaultView)!=null?i:"Source"}`).onChange(async s=>{this.settings.defaultView=s,await e()})})}};var C=require("obsidian");var T=require("obsidian");var U=class extends T.Modal{constructor(e,n,i,s,r,o,a){super(e);this.resultConfirmed=!1;this.title=n,this.defaultPassword=r,this.confirmPassword=s,this.isEncrypting=i,this.singlePassword=o,this.encryptedString=a}onOpen(){var l,c,h,p;let{contentEl:e}=this;e.empty(),this.invalidate();let n=(c=(l=this.defaultPassword)==null?void 0:l.password)!=null?c:"",i="",s=(p=(h=this.defaultPassword)==null?void 0:h.hint)!=null?p:"";new T.Setting(e).setHeading().setName(this.title),b.buildPasswordSetting({container:e,name:"Password:",placeholder:this.isEncrypting?"":`Hint: ${s}`,initialValue:n,autoFocus:n=="",onChangeCallback:g=>{n=g,this.invalidate()},onEnterCallback:async g=>{if(n=g,this.invalidate(),n.length>0)if(r.settingEl.isShown()){let d=r.components.find(u=>u instanceof T.TextComponent);d instanceof T.TextComponent&&d.inputEl.focus()}else if(o.settingEl.isShown()){let d=o.components.find(u=>u instanceof T.TextComponent);d instanceof T.TextComponent&&d.inputEl.focus()}else await a()&&this.close()}});let r=b.buildPasswordSetting({container:e,name:"Confirm Password:",autoFocus:n!="",onChangeCallback:g=>{i=g,this.invalidate()},onEnterCallback:async g=>{if(i=g,this.invalidate(),i.length>0&&await a()&&o.settingEl.isShown()){let d=o.components.find(u=>u instanceof T.TextComponent);d instanceof T.TextComponent&&d.inputEl.focus()}}});this.confirmPassword||r.settingEl.hide();let o=new T.Setting(e).setName("Optional Password Hint").addText(g=>{g.inputEl.placeholder="Password Hint",g.setValue(s),g.onChange(d=>s=d),g.inputEl.on("keypress","*",async(d,u)=>{d.key=="Enter"&&u instanceof HTMLInputElement&&u.value.length>0&&(d.preventDefault(),await a()&&this.close())})});this.isEncrypting||o.settingEl.hide(),new T.Setting(e).addButton(g=>{g.setButtonText("Confirm").onClick(async d=>{await a()&&this.close()})});let a=async()=>{if(this.invalidate(),r.setDesc(""),this.confirmPassword&&n!=i)return r.setDesc("Passwords don't match"),!1;let d=await E.BuildDefault().decryptFromBase64(this.encryptedString,n);return console.log({decryptedText:d}),console.log({eS:this.encryptedString}),console.log({password:n}),this.isEncrypting&&this.singlePassword&&d==null?(console.debug("3. This password does not match the default password."),new T.Notice("This password does not match the default password."),!1):(this.resultConfirmed=!0,this.resultPassword={password:n,hint:s},!0)}}openAsync(){return new Promise((e,n)=>{this.onClose=()=>{this.resultConfirmed==!0?e(this.resultPassword):n()},this.open()})}invalidate(){this.resultConfirmed=!1,this.resultPassword={password:"",hint:""}}};var q=class{async onload(t,e){this.plugin=t,this.pluginSettings=e,this.plugin.addCommand({id:"meld-encrypt-convert-to-or-from-encrypted-note",name:"Convert to or from an Encrypted note",icon:"file-lock",checkCallback:n=>this.processCommandConvertActiveNote(n)}),this.plugin.addRibbonIcon("file-lock","Convert to or from an Encrypted note",n=>this.processCommandConvertActiveNote(!1)),this.plugin.registerEvent(this.plugin.app.workspace.on("file-menu",(n,i)=>{i instanceof C.TFile&&(i.extension=="md"&&n.addItem(s=>{s.setTitle("Encrypt note").setIcon("file-lock").onClick(()=>this.processCommandEncryptNote(i))}),k.contains(i.extension)&&n.addItem(s=>{s.setTitle("Decrypt note").setIcon("file").onClick(()=>this.processCommandDecryptNote(i))}))}))}onunload(){}buildSettingsUi(t,e){}checkCanEncryptFile(t){return t==null?!1:t.extension=="md"}checkCanDecryptFile(t){return t==null?!1:k.contains(t.extension)}processCommandEncryptNote(t){this.getPasswordAndEncryptFile(t).catch(e=>{e&&new C.Notice(e,1e4)})}processCommandDecryptNote(t){this.getPasswordAndDecryptFile(t).catch(e=>{e&&new C.Notice(e,1e4)})}processCommandConvertActiveNote(t){let e=this.plugin.app.workspace.getActiveFile();if(t)return this.checkCanEncryptFile(e)||this.checkCanDecryptFile(e);(e==null?void 0:e.extension)=="md"&&this.getPasswordAndEncryptFile(e).catch(n=>{n&&new C.Notice(n,1e4)}),e&&k.contains(e.extension)&&this.getPasswordAndDecryptFile(e).catch(n=>{n&&new C.Notice(n,1e4)})}async getPasswordAndEncryptFile(t){if(!this.checkCanEncryptFile(t))throw new Error("Unable to encrypt file");let e=y.getByFile(t),n=new U(this.plugin.app,"Encrypt Note",!0,!0,e,this.pluginSettings.singlePassword,this.pluginSettings.encryptedString);try{let i=await n.openAsync(),s=await this.encryptFile(t,i);await this.closeUpdateRememberPasswordThenReopen(t,se,s,i),new C.Notice("\u{1F510} Note was encrypted \u{1F510}")}catch(i){i&&new C.Notice(i,1e4)}}async getPasswordAndDecryptFile(t){if(!this.checkCanDecryptFile(t))throw new Error("Unable to decrypt file");let e=y.getByFile(t);if(e.password!=""){let r=await this.decryptFile(t,e.password);if(r!=null){await this.closeUpdateRememberPasswordThenReopen(t,"md",r,e);return}}let n=await this.plugin.app.vault.read(t),i=I.decode(n),s=new U(this.plugin.app,"Decrypt Note",!1,!1,{password:"",hint:i.hint},this.pluginSettings.singlePassword,"");try{if(e=await s.openAsync(),!s.resultConfirmed)return;let r=await this.decryptFile(t,e.password);if(r==null)throw new Error("Decryption failed");await this.closeUpdateRememberPasswordThenReopen(t,"md",r,e),new C.Notice("\u{1F513} Note was decrypted \u{1F513}")}catch(r){r&&new C.Notice(r,1e4)}}async closeUpdateRememberPasswordThenReopen(t,e,n,i){let s=!1;this.plugin.app.workspace.iterateAllLeaves(r=>{r.view instanceof C.TextFileView&&r.view.file==t&&(r.detach(),s=!0)});try{let r=V.getFilePathWithNewExtension(t,e);await this.plugin.app.fileManager.renameFile(t,r),await this.plugin.app.vault.modify(t,n),y.putByFile(i,t)}finally{s&&await this.plugin.app.workspace.getLeaf().openFile(t)}}async encryptFile(t,e){let n=await this.plugin.app.vault.read(t),i=await D.encode(e.password,e.hint,n);return I.encode(i)}async decryptFile(t,e){let n=await this.plugin.app.vault.read(t),i=I.decode(n);return await D.decrypt(i,e)}};var re=class extends ve.Plugin{constructor(){super(...arguments);this.enabledFeatures=[]}async onload(){await this.loadSettings(),this.enabledFeatures.push(new $,new q,new Y),this.addSettingTab(new W(this.app,this,this.settings,this.enabledFeatures)),this.enabledFeatures.forEach(async e=>{await e.onload(this,this.settings)})}onunload(){this.enabledFeatures.forEach(async e=>{e.onunload()})}async loadSettings(){let e={confirmPassword:!0,rememberPassword:!0,singlePassword:!1,defaultHint:"",encryptedString:"",rememberPasswordTimeout:30,rememberPasswordLevel:y.LevelFilename,featureWholeNoteEncrypt:{defaultView:"Source".toString()},featureInplaceEncrypt:{expandToWholeLines:!1,showMarkerWhenReadingDefault:!0}};this.settings=Object.assign(e,await this.loadData()),y.setActive(this.settings.rememberPassword),y.setAutoExpire(this.settings.rememberPasswordTimeout==0?null:this.settings.rememberPasswordTimeout),y.setLevel(this.settings.rememberPasswordLevel)}async saveSettings(){await this.saveData(this.settings)}};
